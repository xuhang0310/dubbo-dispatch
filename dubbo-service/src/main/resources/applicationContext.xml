<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"  
	   xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://code.alibabatech.com/schema/dubbo 
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
		default-autowire="byName">
	
	

	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource"  class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
		    <property name="driverClassName" value="${driverClassName}"/>
		    <!-- 基本属性 url、user、password -->
		    <property name="url" value="${url}" />
		    <property name="username" value="${username}" />
		    <property name="password" value="${password}" />
		 
		    <!-- 配置初始化大小、最小、最大 -->
		    <property name="initialSize" value="3" />
		    <property name="minIdle" value="3" />
		    <property name="maxActive" value="20" />
		 
		    <!-- 配置获取连接等待超时的时间 -->
		    <property name="maxWait" value="60000" />
		 
		    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		    <property name="timeBetweenEvictionRunsMillis" value="60000" />
		 
		    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		    <property name="minEvictableIdleTimeMillis" value="300000" />
		 
		    <property name="validationQuery" value="SELECT 'x' from dual " />
		    <property name="testWhileIdle" value="true" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
		 
		    <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
		    <property name="poolPreparedStatements" value="true" />
		    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
		 
		    <!-- 配置监控统计拦截的filters -->
		  <property name="filters" value="stat" />
    </bean>
	
	
	<!-- jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
  	
	
	
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<tx:advice id="SimpleAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	      <tx:method name="save*" propagation="REQUIRED"/>
	      <tx:method name="del*" propagation="REQUIRED"/>
	      <tx:method name="update*" propagation="REQUIRED"/>
	      <tx:method name="add*" propagation="REQUIRED"/>
	      <tx:method name="find*" propagation="REQUIRED"/>
	      <tx:method name="get*" propagation="REQUIRED"/>
	      <tx:method name="apply*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
	<!--  配置参与事务的类 -->
	<aop:config>
		<aop:pointcut id="allSimpleServiceMethod" expression="execution(* com.github.*.*.service..*(..))"/>
		<aop:advisor pointcut-ref="allSimpleServiceMethod" advice-ref="SimpleAdvice" />
	</aop:config>
	<aop:aspectj-autoproxy  />  
   
     <!-- liu上传文件所需要的解析器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"/>  
        <property name="maxUploadSize" value="10485760000"/>  
        <property name="maxInMemorySize" value="40960"/><!-- 默认使用的内存 -->  
      
    </bean>  
	
  
</beans>